import java.util.Stack;

public class Main2 {
    public static void main(String[] args) {
        // Пример входной строки со скобками
        String input = "({[]})";
        // Вывод результата проверки на балансировку скобок
        System.out.println(isBalanced(input) ? "Скобки расставлены правильно" : "Скобки расставлены неправильно");
    }

    // Метод для проверки балансировки скобок в строке
    public static boolean isBalanced(String s) {
        // Использование стека для отслеживания открывающих скобок
        Stack<Character> stack = new Stack<>();
        // Итерация по каждому символу в строке
        for (char c : s.toCharArray()) {
            // Если символ является открывающей скобкой, помещаем его в стек
            if (c == '(' || c == '[' || c == '{') {
                stack.push(c);
            } else {
                // Если стек пуст и встретилась закрывающая скобка, баланс нарушен
                if (stack.isEmpty()) return false;
                // Получение верхнего элемента стека (без его удаления)
                char top = stack.peek();
                // Если верхний элемент стека соответствует текущей закрывающей скобке,
                // удаляем элемент из стека
                if ((c == ')' && top == '(') || (c == ']' && top == '[') || (c == '}' && top == '{')) {
                    stack.pop();
                } else {
                    // Если верхний элемент стека не соответствует текущей закрывающей скобке, баланс нарушен
                    return false;
                }
            }
        }
        // Если после обработки всех символов стек пуст, скобки расставлены правильно
        return stack.isEmpty();
    }
}
